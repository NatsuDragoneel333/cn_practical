#include <iostream>
#include <cstdlib>
#include <ctime>
#include <unistd.h>
using namespace std;
class Packet {
public:
int sequenceNumber;
Packet(int seq) : sequenceNumber(seq) {}
};
class Sender {
public:
void send(Packet packet) {
cout << "Sender: Sending packet with sequence number " << packet.sequenceNumber
<<endl;
sleep(1);
}
bool waitForAck(int expectedSeqNum) {
sleep(1);
bool ackReceived = (rand() % 2 == 0);
if (ackReceived) {
cout << "Sender: Acknowledgment for sequence number " << expectedSeqNum << "
received." <<endl;
} else {
cout << "Sender: Acknowledgment for sequence number " << expectedSeqNum << "
not received. Retransmitting..." <<endl;
}
return ackReceived;
}
};
class Receiver {
public:
void receive(Packet packet) {
cout << "Receiver: Received packet with sequence number " <<
packet.sequenceNumber << endl;
sleep(1);
}
Packet generateAck(int seqNumber) {
cout << "Receiver: Generating acknowledgment for sequence number " << seqNumber
<< endl;
return Packet(seqNumber);
}
};
int main() {
srand(time(NULL));
Sender sender;
Receiver receiver;
int sequenceNumber = 0;
int totalPackets = 5;
while (sequenceNumber < totalPackets) {
Packet packet(sequenceNumber);
sender.send(packet);
if (sender.waitForAck(sequenceNumber)) {
++sequenceNumber;
}
}
return 0;
}